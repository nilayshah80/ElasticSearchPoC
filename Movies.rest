@url = http://127.0.0.1:9200
//docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.1

### Movie properties
PUT {{url}}/movies
Content-Type: application/json

{
    "mappings" : {
        "properties" : {
            "year": {
                "type": "date"
            }
        }
    }    
}

### GET Movie properties
GET {{url}}/movies/_mapping
Content-Type: application/json


### Post Signle movie document
POST {{url}}/movies/_doc/109487
Content-Type: application/json

{
    "genre" : ["IMAX", "Sci-Fi"],
    "title": "Interstellar",
    "year": 2014
}

### GET Movie search
GET {{url}}/movies/_search?pretty
Content-Type: application/json

### PUT Bulk movies
PUT {{url}}/_bulk
Content-Type: application/x-ndjson

{ "create" : { "_index" : "movies", "_id" : "135569" } }
{ "id": "135569", "title" : "Star Trek Beyond", "year":2016 , "genre":["Action", "Adventure", "Sci-Fi"] }
{ "create" : { "_index" : "movies", "_id" : "122886" } }
{ "id": "122886", "title" : "Star Wars: Episode VII - The Force Awakens", "year":2015 , "genre":["Action", "Adventure", "Fantasy", "Sci-Fi", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "109487" } }
{ "id": "109487", "title" : "Interstellar", "year":2014 , "genre":["Sci-Fi", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "58559" } }
{ "id": "58559", "title" : "Dark Knight, The", "year":2008 , "genre":["Action", "Crime", "Drama", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "1924" } }
{ "id": "1924", "title" : "Plan 9 from Outer Space", "year":1959 , "genre":["Horror", "Sci-Fi"] }    
//Give a new line here. Not '\n' but the actual new line.
//don't forget to check content type


### GET Movie search
GET {{url}}/movies/_search?pretty
Content-Type: application/json

### Update movie document with all types
PUT {{url}}/movies/_doc/109487/
Content-Type: application/json

{
    "genre" : ["IMAX", "Sci-Fi"],
    "title": "Interstellar foo",
    "year": 2014
}

### GET Movie search
GET {{url}}/movies/_doc/109487
Content-Type: application/json

### Update movie title only
POST {{url}}/movies/_doc/109487/_update
Content-Type: application/json

{
    "doc":{
        "title": "Interstellar"
    }
}

### GET Movie search for DARK KNIGHT
GET {{url}}/movies/_search?q=Dark
Content-Type: application/json

### Delete Movie
DELETE {{url}}/movies/_doc/58559
Content-Type: application/json

### Update movie title with seq no and primary term for optimistic concurrency
PUT {{url}}/movies/_doc/109487?if_seq_no=8&if_primary_term=1
Content-Type: application/json

{
    "genre" : ["IMAX", "Sci-Fi"],
    "title": "Interstellar",
    "year": 2014
}

### Update movie title only - Concurrency handled by elastic search itsel
POST {{url}}/movies/_doc/109487/_update?retry_on_conflict=5
Content-Type: application/json

{
    "doc":{
        "title": "Interstellar"
    }
}

### GET Movie search results in partial match
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
    "match" : {
    "title" : "Star Trek"
    }
    }
}

### GET Movie search results in partial match
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
    "match_phrase" : {
    "genre" : "sci"
    }
    }
}

### Delete entire Movie index
DELETE {{url}}/movies
Content-Type: application/json

### Movie properties updated after deleting entire index
PUT {{url}}/movies
Content-Type: application/json

{
    "mappings" : {
        "properties" : {
            "id": {"type":"integer"},
            "year": {"type": "date"},
            "genre":{"type":"keyword"},
            "title":{"type": "text", "analyzer":"english"}
        }
    }    
}

### PUT Bulk movies
PUT {{url}}/_bulk
Content-Type: application/x-ndjson

{ "create" : { "_index" : "movies", "_id" : "135569" } }
{ "id": "135569", "title" : "Star Trek Beyond", "year":2016 , "genre":["Action", "Adventure", "Sci-Fi"] }
{ "create" : { "_index" : "movies", "_id" : "122886" } }
{ "id": "122886", "title" : "Star Wars: Episode VII - The Force Awakens", "year":2015 , "genre":["Action", "Adventure", "Fantasy", "Sci-Fi", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "109487" } }
{ "id": "109487", "title" : "Interstellar", "year":2014 , "genre":["Sci-Fi", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "58559" } }
{ "id": "58559", "title" : "Dark Knight, The", "year":2008 , "genre":["Action", "Crime", "Drama", "IMAX"] }
{ "create" : { "_index" : "movies", "_id" : "1924" } }
{ "id": "1924", "title" : "Plan 9 from Outer Space", "year":1959 , "genre":["Horror", "Sci-Fi"] }    
//Give a new line here. Not '\n' but the actual new line.
//don't forget to check content type

### GET Movie search results in nothing as case not matched
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
    "match_phrase" : {
    "genre" : "sci-fi"
    }
    }
}

### GET Movie search results in partial match
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
    "match_phrase" : {
    "genre" : "Sci-Fi"
    }
    }
}

### GET Movie search results in partial match
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
    "match" : {
    "title" : "star wars"
    }
    }
}

### Query Lite - google URI Search on elasticsearch docs
GET {{url}}/movies/_search?q=title:star+year:>2010+title:trek
Content-Type: application/json

### Search Query -> Match
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "match" : {
            "title": "star"
        }
    }
}

### Search Query -> Bool -> Must Filter
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "bool" : {
            "must": {"term": {"title":"trek"}},
            "filter": {"range": {"year": {"gte": 2010}}}
        }
    }
}


###Phrase Search
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "match": {
            "title": "star wars"
        }
    }
}

###Phrase Search
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "title": "star wars"
        }
    }
}

###Phrase Search - slop 1 proximity query
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "title": {"query": "star beyond", "slop":1}
        }
    }
}

###Phrase Search - slop 100 proximity query
GET {{url}}/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "title": {"query": "star beyond", "slop":100}
        }
    }
}
